DATA=${KDF9_DATA:-Data}

trap "rm -f MTx ${DATA}/mt_test_labels.txt  mt_test_diff.txt"  0 1 2 3

opt=${1:-ahpr}
>MT0
>MT1
>MT2
>MT3
>MT4
>MT5
>ST0
cat > ${DATA}/mt_test_labels.txt <<++++
-00-1234WHETLIST|
00000000        |
-00-0552EFPBEAAG|
77777777MS-DUMP.|
-00-2339+KOUTPUT/0023004|
0-00-929PRINTEND|
0-00-777AMPEXTM4|
|
++++
nine_test RLT mt_test_labels - zw
cp MT2 MTx

> MT1
> mt_test_log.txt

echo TEST A - MRWD, MFR, MBR, MLW, MBSK, MLB, MFSK, MGAP, writing max block, MWIPE - should terminate normally:
cp MTx MT2; ucc OUT4A; nine OUT4A - t $opt >> mt_test_log.txt; fgrep "Digital signature" KDF9_log.txt >>mt_test_log.txt
case $opt in
z)
   echo ======; cat TP0; echo ======; echo;;
*) ;;
esac
echo TEST B - GAP in unWIPEd area - should fail \"Invalid operand\":
cp MTx MT2; ucc OUT4B; nine OUT4B - t $opt >> mt_test_log.txt; fgrep "Digital signature" KDF9_log.txt >>mt_test_log.txt
case $opt in
z)
   echo ======; cat TP0; echo ======; echo;;
*) ;;
esac
echo TEST C - valid WIPE at end of data - should end normally:
cp MTx MT2; ucc OUT4C; nine OUT4C - t $opt >> mt_test_log.txt; fgrep "Digital signature" KDF9_log.txt >>mt_test_log.txt
case $opt in
z)
   echo ======; cat TP0; echo ======; echo;;
*) ;;
esac
echo TEST D - reading past the end of data - should fail \"Invalid operand\":
cp MTx MT2; ucc OUT4D; nine OUT4D - t $opt >> mt_test_log.txt; fgrep "Digital signature" KDF9_log.txt >>mt_test_log.txt
case $opt in
z)
   echo ======; cat TP0; echo ======; echo;;
*) ;;
esac
echo TEST E - attempt to write past PET - should fail \"Invalid operand\":
cp MTx MT2; ucc OUT4E; nine OUT4E - t $opt >> mt_test_log.txt; fgrep "Digital signature" KDF9_log.txt >>mt_test_log.txt
case $opt in
z)
   echo ======; cat TP0; echo ======; echo;;
*) ;;
esac
echo TEST F - MW, MWE, MFRE and MBRE - should end normally:
cp MTx MT2; ucc OUT4F; nine OUT4F - t $opt >> mt_test_log.txt; fgrep "Digital signature" KDF9_log.txt >>mt_test_log.txt
case $opt in
z)
   echo ======; cat TP0; echo ======; echo;;
*) ;;
esac
echo TEST G - WIPE entire tape, leaving it unlabelled - should end normally:
cp MTx MT2; ucc OUT4G; nine OUT4G - t $opt >> mt_test_log.txt; fgrep "Digital signature" KDF9_log.txt >>mt_test_log.txt
case $opt in
z)
   echo ======; cat TP0; echo ======; echo;;
*) ;;
esac
echo TEST H - writing to ETW - should end normally:
cp MTx MT2; ucc OUT4H; nine OUT4H - t $opt >> mt_test_log.txt; fgrep "Digital signature" KDF9_log.txt >>mt_test_log.txt
case $opt in
z)
   echo ======; cat TP0; echo ======; echo;;
*) ;;
esac
echo TEST I - MBR at BTW - should LIV:
cp MTx MT2; ucc OUT4I; nine OUT4I - t $opt >> mt_test_log.txt; fgrep "Digital signature" KDF9_log.txt >>mt_test_log.txt
case $opt in
z)
   echo ======; cat TP0; echo ======; echo;;
*) ;;
esac
echo TEST J - MBSK at BTW - should LIV:
cp MTx MT2; ucc OUT4J; nine OUT4J - t $opt >> mt_test_log.txt; fgrep "Digital signature" KDF9_log.txt >>mt_test_log.txt
case $opt in
z)
   echo ======; cat TP0; echo ======; echo;;
*) ;;
esac
echo TEST K - MBR after label block, R/W 1-word blocks - should end normally:
cp MTx MT2; ucc OUT4K; nine OUT4K - t $opt >> mt_test_log.txt; fgrep "Digital signature" KDF9_log.txt >>mt_test_log.txt
case $opt in
z)
   echo ======; cat TP0; echo ======; echo;;
*) ;;
esac
echo TEST L - R/W 32K-word blocks - should end normally:
cp MTx MT2; ucc OUT4L; nine OUT4L - t $opt >> mt_test_log.txt; fgrep "Digital signature" KDF9_log.txt >>mt_test_log.txt
case $opt in
z)
   echo ======; cat TP0; echo ======; echo;;
*) ;;
esac

echo TEST T - like TEST A but for 7-track decks - should end normally:
nine_test RLT mt_test_labels - zw; ucc OUT4T; nine OUT4T - t $opt >> mt_test_log.txt; fgrep "Digital signature" KDF9_log.txt >>mt_test_log.txt
case $opt in
z)
   echo ======; cat TP0; echo ======; echo;;
*) ;;
esac

echo
diff mt_test_log.txt MT_good_test_log.txt >mt_test_diff.txt
if [ -s mt_test_diff.txt ]
then
   echo These are the unexpected variances for this run:
   echo ===
   more mt_test_diff.txt
   echo ===
else
   echo These tests ran as expected.
fi
