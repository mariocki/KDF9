export BINARY=Binary
export DATA=Data
export KIDSGROVE=Kidsgrove
export USERCODE=Assembly
export WHETSTONE=Whetstone
export TEMPORARY=${ALGOL_TEMP:-Workfiles}

cp settings_1.txt ${TEMPORARY}/SAVED-settings_1.txt
cp settings_2.txt ${TEMPORARY}/SAVED-settings_2.txt
cp settings_3.txt ${TEMPORARY}/SAVED-settings_3.txt
cp settings_for_kalgol.txt ${TEMPORARY}/SAVED-settings_for_kalgol.txt
cp settings_symbols.txt ${TEMPORARY}/SAVED-settings_symbols.txt

trap "mv ${TEMPORARY}/SAVED-settings_1.txt settings_1.txt; \
      mv ${TEMPORARY}/SAVED-settings_2.txt settings_2.txt; \
      mv ${TEMPORARY}/SAVED-settings_3.txt settings_2.txt; \
      mv ${TEMPORARY}/SAVED-settings_for_kalgol.txt settings_for_kalgol.txt; \
      mv ${TEMPORARY}/SAVED-settings_symbols.txt settings_symbols.txt; \
      rm -f ${TEMPORARY}/ee9_regr_tests_log.txt \
      rm -f ${TEMPORARY}/differences.txt \
      exit 999"                          \
      0 1 2 3

echo
echo This runs a variety of tests, designed to verify that ee9 is working.
echo The distributed ee9 takes less than 60 seconds on a 2017 iMac.
echo
echo N.B. All I/O device files \(e.g. TR1 or MT0\) may be overwritten by this test.
echo
echo "     Quit at the prompt if you do not want that to be done."
echo
echo The ee9 output scrolls past rapidly, but at the end you will
echo get to see, page-by-page, a listing of the relevant results.
echo
echo Before each new phase, it will pause \(like this\) and wait for you to ...
printf "\\a\\a\\a"
echo
printf "Press q to quit: "

read reply
case ${reply} in
q|Q) exit 0
     ;;
*) ;;
esac

echo

> settings_1.txt
> settings_2.txt
> settings_3.txt
> settings_for_kalgol.txt
> settings_symbols.txt
> ee9_regr_tests_log.txt

echo; echo
echo Running CR emulation tests:
echo ==========================
echo
ee9_test_run CR "cr_regr_tests ahipr a" >> ee9_regr_tests_log.txt; echo

echo; echo
echo Running MT emulation tests:
echo ==========================
echo
ee9_test_run MT "mt_regr_tests ahipr a" >> ee9_regr_tests_log.txt; echo

echo; echo
echo Running DR emulation tests:
echo ==========================
echo
ee9_test_run DR "dr_regr_tests ahipr a" >> ee9_regr_tests_log.txt; echo

echo; echo
echo Running FD emulation tests:
echo ==========================
echo
ee9_test_run FD "fd_regr_tests ahipr a" >> ee9_regr_tests_log.txt; echo

echo; echo
echo Running problem program correctness tests:
echo =========================================
echo

> CP0
> DR0
> FD0
> GP0
> LP0
> MT0
> MT1
> MT2
> MT3
> MT4
> MT5
> ST0
> TP0
> TP1

/bin/sh ee9_test_case HIG $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case LOG $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case DMP $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case REM $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case DVD $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case ACK $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case HLT $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case HKT $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case MOB $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case GPR $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case FLU $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case WBM $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case RLT $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case TO4 $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case TOX $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case MTW $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case INP $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case WAB gn  >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case FLO $1 >> ee9_regr_tests_log.txt; echo
/bin/sh ee9_test_case 1DH $1 >> ee9_regr_tests_log.txt; echo


echo; echo
echo Running Kidsgrove kids tests:
echo ============================================
echo
ee9_test_run KIDS "kids_tests ahipr a" >> ee9_regr_tests_log.txt
echo


echo; echo
echo Running Kidsgrove wich tests:
echo ============================================
echo
ee9_test_run WICH "wich_tests ahipr a" >> ee9_regr_tests_log.txt
echo

printf "\\a\\a\\a"
echo Press RETURN when you are ready to see the results:
read reply

cp ee9_regr_tests_log.txt ${TEMPORARY}/ee9_regr_tests_log.txt
a2b -reg > ee9_regr_tests_log.txt < ${TEMPORARY}/ee9_regr_tests_log.txt

more ee9_regr_tests_log.txt

diff ee9_regr_tests_log.txt ee9_regr_tests_good_log.txt  > ${TEMPORARY}/differences.txt

printf "\\a\\a\\a"
echo Press RETURN to complete the procedure:
read reply

if [ ! \( -s ${TEMPORARY}/differences.txt \) ]
then
   echo
   echo "Done: ee9 is working as expected."
   echo
   echo "To see the plotted graph, open GP0 with a program that supports"
   echo "Encapsulated PostScript (EPS); e.g. Preview in macOS."
   echo
else
   echo
   echo The test has shown incorrect results, held in \"ee9_regr_tests_log.txt\".
   echo The following lists the differences from the qualification test log.
   printf "\\a\\a\\a"
   echo Press RETURN to see the discrepancies:
   read reply
   echo
   more ${TEMPORARY}/differences.txt
fi

exit 0
