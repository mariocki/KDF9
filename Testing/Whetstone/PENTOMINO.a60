PENTOMINO|
_b_e_g_i_n _c_o_m_m_e_n_t pentomino, 130968;



_i_n_t_e_g_e_r  solution count, max solution count;
_i_n_t_e_g_e_r  piece number, piece count, place count;
_i_n_t_e_g_e_r  board length, board width, board area;
_i_n_t_e_g_e_r  i, j, k, position;
_i_n_t_e_g_e_r  printer, reader;

_i_n_t_e_g_e_r  form1p12e;
_i_n_t_e_g_e_r  form1p1e;
_i_n_t_e_g_e_r  form6p2;
_i_n_t_e_g_e_r  form2p9;
_i_n_t_e_g_e_r  form2id;
_i_n_t_e_g_e_r  form3id;

form1p12e := format(_[s+d.dddddddddddº+nd_]);
form1p1e  := format(_[+d.dº+nd_]);
form6p2   := format(_[snnnnnd.dd_]);
form2p9   := format(_[+nd.ddddddddds_]);
form2id   := format(_[nd_]);
form3id   := format(_[ndd_]);

printer := 30;
open(printer);

reader := 20;
open(reader);
max solution count := read(reader);

newline(printer,1);
writetext(printer,_[The*first*_]);
write(printer, form2id, max solution count);
writetext(printer,_[*solutions:_]);
newline(printer,3);

board length := read(reader); board width := read(reader);
piece count := read(reader); place count := read(reader);
board area := board length × (board width - 1);

  _b_e_g_i_n
    _i_n_t_e_g_e_r  _a_r_r_a_y  board [-39 : 100];
    _i_n_t_e_g_e_r  _a_r_r_a_y  place, index [1 : piece count];
    _i_n_t_e_g_e_r  _a_r_r_a_y  information [1 : 8 × place count];
    _b_o_o_l_e_a_n  _a_r_r_a_y  unused [1 : piece count];

    _p_r_o_c_e_d_u_r_e  print solution;
    _b_e_g_i_n  _i_n_t_e_g_e_r  i, j;

      writetext(printer,_[_[c_]print *solution: _[c_]_]);
      writetext(printer,_[_[c_]board*length*= _]);
      write(printer, form3id, board length);
      newline(printer,1);
      writetext(printer,_[_[c_]board*width*= _]);
      write(printer, form3id, board width);
      newline(printer,1);
      writetext(printer,_[_[c_]piece*count*= _]);
      write(printer, form3id, piece count);
      newline(printer,1);
      writetext(printer,_[_[c_]place*count*= _]);
      write(printer, form3id, place count);
      newline(printer,1);

      solution count := solution count + 1;
      _i_f  solution count > max solution count _t_h_e_n
         _b_e_g_i_n
         writetext(printer,_[_[c_]solution*count*= _]);
         write(printer, form3id, solution count);
         newline(printer,3);
         _g_o_t_o  END OF RUN;
         _e_n_d;
      newline(printer,1);
      _f_o_r  j := 1 _s_t_e_p  1 _u_n_t_i_l  2 × board length _d_o
         _b_e_g_i_n  writetext(printer,_[-_]); writetext(printer,_[*_]) _e_n_d;
      _c_o_m_m_e_n_t  write(printer,form6p2,time); newline(printer,1);
      _f_o_r  i := 0 _s_t_e_p  board length _u_n_t_i_l  board area _d_o
         _b_e_g_i_n  writetext(printer,_[I_]);
           _f_o_r  j := 1 _s_t_e_p  1 _u_n_t_i_l  board length - 1 _d_o
              _b_e_g_i_n  writetext(printer,_[***_]);
                _i_f  board[i + j] ± board[i + j + 1]
                _t_h_e_n  writetext(printer,_[I_])
                _e_l_s_e  writetext(printer,_[*_])
              _e_n_d;
           writetext(printer,_[***_]);
           writetext(printer,_[I_]);
           newline(printer,1);
           writetext(printer,_[*_]);
           _i_f  i < board area _t_h_e_n
             _b_e_g_i_n
                _f_o_r  j := 1 _s_t_e_p  1 _u_n_t_i_l  board length _d_o
                  _b_e_g_i_n
                    _i_f  board[i + j] ± board[i + j + board length] _t_h_e_n
                        _b_e_g_i_n writetext(printer,_[-_]); writetext(printer,_[*_]);
                                   writetext(printer,_[-_]); writetext(printer,_[*_])
                        _e_n_d
                    _e_l_s_e  writetext(printer,_[****_])
                  _e_n_d
              _e_n_d
           _e_l_s_e
             _f_o_r  j := 1 _s_t_e_p  1 _u_n_t_i_l  2 × board length _d_o
                _b_e_g_i_n  writetext(printer,_[-_]); writetext(printer,_[*_]) _e_n_d;
           newline(printer,1)
         _e_n_d;
      newline(printer,2);
    _e_n_d  print solution;

   _p_r_o_c_e_d_u_r_e  up (field, column); _v_a_l_u_e field, column; _i_n_t_e_g_e_r field, column;
   _b_e_g_i_n
   _i_n_t_e_g_e_r i, j, k, r, w, piece, count;
   piece number := piece number + 1;
   _f_o_r  piece := 1 _s_t_e_p  1 _u_n_t_i_l  piece count _d_o
      _i_f  unused[piece] _t_h_e_n
         _b_e_g_i_n
         unused[piece] := _f_a_l_s_e;
         board[field] := piece;
         count := place[piece] - 1;
         _f_o_r  i := 0 _s_t_e_p  1 _u_n_t_i_l  count _d_o
            _b_e_g_i_n  w := index[piece] + 4 × i;
            _i_f  board[information[w] + field] = 0 _t_h_e_n
               _b_e_g_i_n
               _i_f  board[information[w + 1] + field] = 0 _t_h_e_n
                   _b_e_g_i_n
                   _i_f  board[information[w + 2] + field] = 0 _t_h_e_n
                     _b_e_g_i_n
                     _i_f  board[information[w + 3] + field] = 0 _t_h_e_n
                       _b_e_g_i_n
                       _f_o_r  j := 0, 1, 2, 3 _d_o
                           board[information[w + j] + field] := piece;

                        _i_f  piece number = piece count
                        _t_h_e_n  print solution
                        _e_l_s_e
                           _b_e_g_i_n
                           _f_o_r  k := column _s_t_e_p  1 _u_n_t_i_l  board length _d_o
                              _f_o_r  r := 0 _s_t_e_p  board length _u_n_t_i_l  board area _d_o
                                 _i_f  board[r + k] = 0 _t_h_e_n  _g_o_t_o  NEXT;
                     NEXT: up (r + k, k)
                           _e_n_d;
                        _f_o_r  j := 0, 1, 2, 3 _d_o
                           board[information[w + j] + field] := 0
                        _e_n_d
                     _e_n_d
                  _e_n_d
               _e_n_d
            _e_n_d;
         unused[piece] := _t_r_u_e
         _e_n_d;
   board[field] := 0;
DOWN:
   piece number := piece number - 1
   _e_n_d  up;

    position := 1;
    _f_o_r  i := 1 _s_t_e_p  1 _u_n_t_i_l  piece count _d_o
       _b_e_g_i_n  j := read(reader); _c_o_m_m_e_n_t  stone piece number, is not used;
          index[i] := position; place[i] := read(reader);
          _f_o_r  j := 1 _s_t_e_p  1 _u_n_t_i_l  place[i] _d_o
             _b_e_g_i_n  _f_o_r  k := 0 _s_t_e_p  1 _u_n_t_i_l  3 _d_o
               information[position + k] := read(reader);
               position := position + 4
             _e_n_d
       _e_n_d;
    _f_o_r  i := - 39 _s_t_e_p  1 _u_n_t_i_l  0,
               + 61 _s_t_e_p  1 _u_n_t_i_l  100 _d_o
       board[i] := - 1;
    _f_o_r  i := 1 _s_t_e_p  1 _u_n_t_i_l  60 _d_o
       board[i] := 0;
    _f_o_r  i := 1 _s_t_e_p  1 _u_n_t_i_l  piece count _d_o
       unused[i] := _t_r_u_e;

    solution count := piece number := 0;

    up (1, 1);

END OF RUN:

  _e_n_d ;

close(reader);
close(printer);

_e_n_d
|
9,
10, 6, 12, 63,
1, 1, -9, 1, 11, 2,
2, 2, 1, 2, 3, 4, 10, 20, 30, 40,
3, 4, 1, 10, 20, 21, 1, 11, 20, 21, -10, -9, -8, 2, 10, 11, 12, 2,
4, 4, 1, 11, 21, 22, 1, -9, -19, -18, 10, 11, 12, 22, -10, -9, -8, -18,
5, 4, 1, 11, 21, 2, 1, -9, -19, 2, 1, 2, -8, 12, 10, -10, 1, 2,
6, 4, 1, 2, 12, 22, 1, 2, -8, -18, 1, 2, 10, 20, 1, 2, -10, -20,
7, 4, 1, 11, 12, 22, 1, -9, -8, -18, 10, 11, 21, 22, -10, -9, -19, -18,
8, 8, 1, 11, 12, 13, 1, -9, -8, -7, 1, 2, 12, 13, 1, 2, -8, -7, 10, 20, 21, 31, 10, 20, 19, 29, 10, 11, 21, 31, 10, 9, 19, 29,
9, 8, 1, -9, 2, 12, 1, 11, 2, -8, 10, 11, 21, 12, -10, -9, -19, -8, 1, 11, 21, 12, 1, -9, -19, -8, 1, 11, -9, 12, 1, 11, -9, -8,
10, 8, 1, 2, 3, 12, 1, 2, 3, -8, 10, 20, 30, 11, -10, -20, -30, -9, 1, 11, 21, -9, 1, -9, -19, 11, 11, 1, 2, 3, -9, 1, 2, 3,
11, 8, 1, 2, 3, 13, 1, 2, 3, -7, 10, 20, 30, 1, -10, -20, -30, 1, 1, 11, 21, 31, 1, -9, -19, -29, 10, 1, 2, 3, -10, 1, 2, 3,
12, 8, 1, 2, 11, 12, 1, 2, -9, -8, 1, 2, 10, 11, 1, 2, -10, -9, 1, 10, 11, 20, 1, 10, 11, 21, 1, -10, -9, -20, 1, -10, -9, -19,
|
|
