TRIANGLE|
_b_e_g_i_n
_c_o_m_m_e_n_t _l_i_b_r_a_r_y A0, A6;

   _c_o_m_m_e_n_t program to integrate f(x,y) over triangle (0,0), (1,0), (1,1);
   _c_o_m_m_e_n_t extra parameter to intint makes it work;

   _r_e_a_l _p_r_o_c_e_d_u_r_e f(x, y);
   _v_a_l_u_e x,y;  _r_e_a_l x,y;
      f:= x + x + y + y;

   _r_e_a_l _p_r_o_c_e_d_u_r_e int(a, b, f);
   _c_o_m_m_e_n_t integrates f(x) over range a to b;
   _v_a_l_u_e a, b; _r_e_a_l a, b;  _r_e_a_l _p_r_o_c_e_d_u_r_e f;
   _b_e_g_i_n   _c_o_m_m_e_n_t adding extra parameter makes it work;
      _r_e_a_l _p_r_o_c_e_d_u_r_e intint(a, b, fa, fb, d);
      _v_a_l_u_e a, b, fa, fb, d;  _r_e_a_l a, b, fa, fb;
      _i_n_t_e_g_e_r d;
      _b_e_g_i_n
         _r_e_a_l c, fc, ff;
         c := (a + b) × 0.5;
         fc := f(c);
         ff := (fa + 4.0×fc + fb);
         _c_o_m_m_e_n_t answer is good enough if simrule no better than trapezoidal;
         _i_f  abs( (fa + fb)×3.0 - ff ) < 0.001
         _t_h_e_n
            intint := ff × (b - a)  × 0.16666666667
         _e_l_s_e
            intint := intint(a, c, fa, fc, d-1) + intint(c, b, fc, fb, d-1);
      _e_n_d!;
      int := intint(a, b, f(a), f(b), 5);
   _e_n_d!;

   _r_e_a_l _p_r_o_c_e_d_u_r_e intfy(x);
   _c_o_m_m_e_n_t integral 0 to x of ff(x,y) dy;
   _v_a_l_u_e x;  _r_e_a_l x;
   _b_e_g_i_n
      _r_e_a_l _p_r_o_c_e_d_u_r_e fx(y);
      _v_a_l_u_e y;  _r_e_a_l y;
         fx := f(x,y);
      intfy := int(0, x, fx);
   _e_n_d!;

   _r_e_a_l _p_r_o_c_e_d_u_r_e minitest(x);
   _v_a_l_u_e x;  _r_e_a_l x;
   _b_e_g_i_n
      minitest := x×x×x;
   _e_n_d!;

   _r_e_a_l answer, pi;
   _i_n_t_e_g_e_r ii;

   writetext(30, _[minitest*0*to*2*x^3*=*_]);
   answer := int(0, 2, minitest);
   output(30, answer);
   writetext(30, _[Now*for*the*square*root _]);
   output(30, sqrt(answer));
   pi := answer×arctan(1.0);
   writetext(30, _[This*is*the*value*of*pi*calculated*using*arctan*_]);
   output(30, pi);
   answer := sin(pi/6.0);
   writetext(30, _[sin*pi/6*which*should*be*a*half*_]);
   output(30, answer);
   answer := cos(pi/6.0);
   writetext(30, _[cos*pi/6*which*should*be*a*the*same*as*the*next*result*_]);
   output(30, answer);
   writetext(30, _[should*be*same*as*the*previous*_]);
   answer := sqrt(3.0)/2.0;
   output(30, answer);

   writetext(30, _[Now*square*it*to*get*3/4*_]);
   output(30, answer^2);

   ii := 3;
   writetext(30, _[3^3*=*_]);
   output(30, ii^ii);
   writetext(30, _[Integer*divide*3*squared*by*2*_]);
   output(30, ii^2 ÷ 2);

   writetext(30, _[Calculate*e*using*exp*_]);
   answer := exp(1.0);
   output(30, answer);
   writetext(30, _[...*and*take*its*log*_]);
   output(30, ln(answer));

   writetext(30, _[_[c_]fulltest*0*to*1*triangle*=*_]);
   answer := int(0, 1, intfy);
   output(30, answer);

   writetext(30, _[Testing*exponentiation:*2 ^ 4*=*_]);
   answer := 4.0;
   output(30, 2^answer);
   writetext(30, _[Testing*exponentiation:*2 ^ 4.0*=*_]);
   output(30, 2.0^answer);

_e_n_d
|

|
