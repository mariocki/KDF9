'begin'  'comment' DavidHu/HoGrammar;
'procedure' jim( p);
   'integer' p;
   'begin'
      'real' jinx;
   'end';

'procedure' james ( nI, vR);
    'value' vR;
    'integer' nI;
    'real' vR;
    'begin'
   nI := vR;
    'end';
'real' x; 'real' y; 'real' z;
'integer' i; 'integer' j; 'integer' k;
'boolean' a; 'boolean' b; 'boolean' c;
    'begin'
    'real' x; 'real' y; 'real' z;
    'integer' i; 'integer' j; 'integer' k;
    'boolean' a; 'boolean' b; 'boolean' c;
        'begin'
           'switch' Sw := label1; 'comment' ,label2;
label1:            i:=10; j:=100; c := (-0.1 < 0);
label2:         'goto'  Sw[1];
        'end';
    'end';
    'begin'
    'real' x; 'real' y; 'real' z;
    'integer' i; 'integer' j; 'integer' k;
    'boolean' a; 'boolean' b; 'boolean' c;
        'begin'
        i:=10; j:=100; z := -0.1;
            'begin'
                'array' p[1:i,0:j]; 'array' q[1:i,0:j]; 'array' r[1:i,0:j];
                'integer' 'array' fred[0:'if' z < 0 'then' 1 'else' 4:20];
                y := fred[i];
                z := p[2,3];
            'end';
        'end';

    james(  x, 1000);
    b := (i+j+k - x) < (x+y+z );
    x := x- y - z;
    'end';
'end'
