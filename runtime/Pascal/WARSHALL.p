PROGRAM TESTT {(INPUT, OUTPUT)};
{ Transitive closure of a relation by Warshall's Algorithm }

CONST
   MAXVERTEX = 17;

TYPE
   VERTEX = 1..MAXVERTEX;
   CONNECTIVITY = PACKED ARRAY[VERTEX] OF SET OF VERTEX;
   DIRECT, INDIRECT : CONNECTIVITY;
   SOURCE, DEST : VERTEX;
   DUPLICATION : BOOLEAN;

   PROCEDURE CLOSURE (C1     : CONNECTIVITY;
                      VAR C2 : CONNECTIVITY;
                      N      : VERTEX);
      VAR
         V, W : VERTEX;
      BEGIN
      FOR V := 1 TO N DO
         FOR W := 1 TO N DO
            IF V IN C1[W] THEN
               C1[W] := C1[W] + C1
      C2 := C1;
      END (* CLOSURE *) ;

   PROCEDURE PRINTCONNECTIVITY (C : CONNECTIVITY;
                                N : VERTEX);
      VAR
         V,W : VERTEX;
      BEGIN
      FOR V := 1 TO N DO
         BEGIN
         FOR W := 1 TO N DO
            WRITE(ORD(W IN C[V]):2);
         WRITELN;
         END;
      END (* PRINTCONNECTIVITY *) ;

BEGIN
FOR SOURCE := 1 TO MAXVERTEX DO
   DIRECT[SOURCE] := [];
DUPLICATION := FALSE;
READ(SOURCE, DEST);
WHILE SOURCE<>DEST DO
   BEGIN
   WRITELN(SOURCE:3, '  -->', DEST:3);
   DUPLICATION := DUPLICATION OR (DEST IN DIRECT[SOURCE]);
   DIRECT[SOURCE] := DIRECT[SOURCE]+[DEST];
   READ(SOURCE, DEST);
   END;
WRITELN;
WRITELN;
IF DUPLICATION THEN
  WRITELN('SOME CONNECTION(S) WERE DUPLICATED');
WRITELN('DIRECT CONNECTIONS:-');
PRINTCONNECTIVITY(DIRECT, MAXVERTEX);
CLOSURE(DIRECT, INDIRECT, MAXVERTEX);
WRITELN; WRITELN;
WRITELN('INDIRECT CONNECTIONS:-');
PRINTCONNECTIVITY(INDIRECT, MAXVERTEX);
END .
