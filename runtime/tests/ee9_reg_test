#!/bin/bash

export BINARY=${KDF9ROOT}/Binary
export DATA=${KDF9ROOT}/Data
export KIDSGROVE=${KDF9ROOT}/Kidsgrove
export USERCODE=${KDF9ROOT}/Assembly
export WHETSTONE=${KDF9ROOT}/Whetstone
export LOGS=${KDF9ROOT}/logs
export TESTS=${KDF9ROOT}/tests

echo ${TESTS}

rm -f ${KDF9ROOT}/settings_1.txt ${KDF9ROOT}/settings_2.txt

trap "cp settings_1.copy settings_1.txt; \
      cp settings_2.copy settings_2.txt; \
      rm -f settings_?.copy;             \
      exit 999"                         \
      1 2 3

echo
echo This runs a variety of tests, designed to verify that ee9 is working.
echo The distributed ee9 takes less than 60 seconds on a 2017 iMac.
echo
echo N.B. All I/O device files \(e.g. TR1 or MT0\) may be overwritten by this test.
echo
echo "     Quit at the prompt if you do not want that to be done."
echo
echo The ee9 output scrolls past rapidly, but at the end you will
echo get to see, page-by-page, a listing of the relevant results.
echo
echo Before each new phase, it will pause \(like this\) and wait for you to ...
printf "\\a\\a\\a"
echo
printf "Press q to quit: "

read reply
case ${reply} in
    q|Q) exit 0
    ;;
    *) ;;
esac

echo

> ${KDF9ROOT}/settings_1.txt
> ${KDF9ROOT}/settings_2.txt
> ${KDF9ROOT}/settings_for_kalgol.txt
> ${LOGS}/ee9_test_case.log

echo; echo
echo Running MT emulation tests:
echo ==========================
echo
${TESTS}/ee9_test_run MT "run_mt_tests ahipr a"      >> ${LOGS}/ee9_test_case.log; echo


echo; echo
echo Running FD emulation tests:
echo ==========================
echo
${TESTS}/ee9_test_run FD "run_fd_tests ahipr a"      >> ${LOGS}/ee9_test_case.log; echo

echo; echo
echo Running CR emulation tests:
echo ==========================
echo
${TESTS}//ee9_test_run CR "run_cr_tests ahipr a"      >> ${LOGS}/ee9_test_case.log; echo

echo; echo
echo Running problem program correctness tests:
echo =========================================
echo

> ${KDF9ROOT}/CP0
> ${KDF9ROOT}/DR0
> ${KDF9ROOT}/FD0
> ${KDF9ROOT}/GP0
> ${KDF9ROOT}/LP0
> ${KDF9ROOT}/MT0
> ${KDF9ROOT}/MT1
> ${KDF9ROOT}/MT2
> ${KDF9ROOT}/MT3
> ${KDF9ROOT}/MT4
> ${KDF9ROOT}/MT5
> ${KDF9ROOT}/ST0
> ${KDF9ROOT}/TP0
> ${KDF9ROOT}/TP1

${TESTS}/ee9_test_case HIG $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case LOG $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case DMP $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case ACK $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case HLT $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case HKT $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case MOB $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case GPR $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case FLU $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case WBM $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case RLT $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case TO4 $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case TOX $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case MTW $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case INP $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case HQP $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case WAB n  >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case FLO $1 >> ${LOGS}/ee9_test_case.log; echo
${TESTS}/ee9_test_case 1DH $1 >> ${LOGS}/ee9_test_case.log; echo

printf "\\a\\a\\a"
echo Press RETURN when you are ready to see the results:
read reply

tr -d "\\r" > ${LOGS}/POSIX-ee9_test_case.log < ${LOGS}/ee9_test_case.log

#more POSIX-ee9_test_case.log

diff -B ${LOGS}/POSIX-ee9_test_case.log ${LOGS}/ee9_good_test_case.log > ${LOGS}/differences.txt

printf "\\a\\a\\a"
echo Press RETURN to complete the procedure:
read reply

if [ ! \( -s ${LOGS}/differences.txt \) ]
then
    echo
    echo "Done: ee9 is working as expected."
    echo
    echo "To see the plotted graph, open GP0 with a program that supports"
    echo "Encapsulated PostScript (EPS); e.g. Preview in macOS."
    echo
else
    echo
    echo The test has shown incorrect results, held in ${LOGS}/\"ee9_test_case.log\".
    echo The following lists the differences from the qualification test log.
    printf "\\a\\a\\a"
    echo Press RETURN to see the discrepancies:
    read reply
    echo
    more ${LOGS}/differences.txt
fi

rm -f ${LOGS}/differences.txt ${LOGS}/POSIX-ee9_test_case.log

exit 0
