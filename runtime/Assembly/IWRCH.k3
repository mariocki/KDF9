PROGRAM;    (IWRCH);

(
   The parameters are assumed to be in the NEST, stacked in order of appearance
   in the FORTRAN SUBROUTINE parameter list, leftmost deepest, rightmost last.
   It is assumed that each parameter is passed by reference, i.e. by giving its address.
   It is assumed that storage for JBUFF is allocated by the caller,
      and that each of its elements is one 48-bit word.
   It is assmed that P9 has free use of Q10 thru Q15.
);

=M15;  (@JLENG);
=M14;  (@JFLAG);
=M13;  (@JINDX);
=M12;  (@JBUFF);
=M11;  (@JCHAR);

(IF THE CHARACTER IS NEGATIVE, THE BUFFER MUST BE TERMINATED);
(IT IS IMMATERIAL WHETHER THE BUFFER IS FULL OR NOT);

      M0M11; (JCHAR); DUP;
   J11LTZ;

(IF THE USER IS ATTEMPTING TO PUT A SIGNIFICANT CHARACTER INTO);
(   THE LINE BUFFER, WE MUST ENSURE THAT THERE IS ENOUGH ROOM);

      M0M13; (JINDX); DUP; SET 80; -;
   J12GTZ;

(IF THERE IS ENOUGH ROOM, PUT THE CHARACTER INTO THE BUFFER AND);
(   INCREMENT THE CURRENT CHARACTER POSITION);

      (JCHAR is in N2); (JINDX is in N1); =RM10; =M12M10Q; (=JBUFF[JINDX], JINDX++);
      M10; =M0M13; (=JINDX);

(SET THE FLAG TO INDICATE ACCEPTANCE OF THE CURRENT CHARACTER);
(   AND RETURN TO THE CALLER);

      ZERO; =M0M14; (JFLAG);
   EXIT 1;

(EARLY EXIT with JCHAR in N1)

*11; ERASE; M0M13; (JINDX is in N1); J1;

(EARLY EXIT with JCHAR in N2, JINDX in N1)

*12; REV; ERASE; (JINDX is in N1);

(THE LINE BUFFER HAS BEEN TERMINATED.  SET THE TERMINATING);
(   CHARACTER AND THE LIMIT INDEX);

1;
      =M10; ZERO; NOT; (EOLN);
      =M12M10; (=JBUFF[JINDX]); M10; =M0M15; (=JLENG);

(RESET THE USER INDEX FOR THE NEXT LINE);

      ZERO; NOT; NEG; (1); DUP; =M0M13; (=JINDX);

(SET THE FLAG TO INDICATE REJECTION OF THE CURRENT CHARACTER);
(   AND RETURN TO THE CALLER);

      (1); =M0M14; (=JFLAG);
   EXIT 1;

FINISH;|
