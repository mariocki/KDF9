#!/bin/bash
#------------------------------------------------------------------------
#    This file is part of ee9.
#
#    ee9 is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    ee9 is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with ee9.  If not, see <https://www.gnu.org/licenses/>.
#------------------------------------------------------------------------
#------------------------------------------------------------------------
# crnine : Executes a KDF9 binary with data on CR0
#------------------------------------------------------------------------

if [ -z $KDF9RUNTIME ]
then
    KDF9RUNTIME="$HOME/.kdf9"
fi

if [ $# -eq 0 ]
then
    set -- "-h";
fi

DATA=${KDF9RUNTIME}/Data

while [[ "$#" -gt 0 ]]; do
    case ${1# } in
        -h|--help) 
            echo "CRNINE - Executes a KDF9 binary with data on CR0.";
            echo;
            echo "Usage: crnine [OPTION]... BINARYNAME [DATAFILE]"
            echo;
            echo "  -d, --diag [f|p|t]          define the diagnostic mode";
            echo "  -s, --state [b|p|t]         define the run state";
            echo "  -m, --misc [a|d|e|f|g|h|i|m|n|o|p|q|r|s|t|w|x|z|0|1|2|3|4|5|6|7|8|9]"
            echo "                              define the miscellaneous options";
            echo "  -TP TPMODE                  define the TP mode";
            echo "  -TR TRMODE                  define the TR mode";
            echo;
            echo "Note: BINARYNAME must exist in ${KDF9RUNTIME}/Binary/"
            echo "      DATAFILE must exist in ${DATA}"
            echo;
            exit 0;;
        -s=*|--state=*)
            state=-s${1#*=};
            ;;
        -d=*|--diag=*)
            mode=-d${1#*=};
            ;;
        -m=*|--misc=*)
            miscellany=-m${1#*=};
            ;;
        -TR=*)
            TRmode=-TR${1#*=};
            ;;
        -TP=*)
            TPmode=-TP${1#*=};
            ;;
        *)
            if [ -z ${prog} ];
            then
                prog="$1";
            else
                datafile="$1";
            fi
            ;;            
    esac
    shift;
done

program=`basename "$prog"`
program=Binary/"$program"
if [ ! -r "${KDF9RUNTIME}/$program" ]
then
    echo "The object code file "${KDF9RUNTIME}/$program" is absent or unreadable."
    echo
    exit 2
fi

if [ x"$datafile"x = xx ]
then
    >${KDF9RUNTIME}/CR0
else
    data=${DATA}/`basename "$datafile" .txt`.txt
    if [ -r "$data" ]
    then
        cat "$data" > ${KDF9RUNTIME}/CR0
    else
        echo "The data file "$datafile" is absent or unreadable."
        echo
        exit 3
    fi
fi

if [ "$mode" = -df ]
then
    time ee9 "$state" "$mode" "$TRmode" "$TPmode" "$miscellany" +"$program"
else
    ee9 "$state" "$mode" "$TRmode" "$TPmode" "$miscellany" +"$program"
fi

printoutput