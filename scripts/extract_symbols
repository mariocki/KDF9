#!/bin/bash
#------------------------------------------------------------------------
#    This file is part of ee9.
#
#    ee9 is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    ee9 is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with ee9.  If not, see <https://www.gnu.org/licenses/>.
#------------------------------------------------------------------------
if [ -z $KDF9RUNTIME ]; then
   KDF9RUNTIME="$HOME/.kdf9"
fi

if [ $# -eq 0 ]; then
   set -- "-h"
fi

SOURCE=${KDF9RUNTIME}/Kidsgrove
DATA=${KDF9RUNTIME}/Data
LOGS=${KDF9RUNTIME}/logs
SETTINGS=${KDF9RUNTIME}/settings
USERCODE=${KDF9RUNTIME}/Assembly

while [[ "$#" -gt 0 ]]; do
   case ${1# } in
   -h | --help)
      echo "EXTRACT_SYMBOLS - generates a unicode settings for symbolic output."
      echo
      echo "Usage: extract_symbols SOURCEFILE"
      echo
      echo "Note: SOURCEFILE must exist in ${USERCODE}"
      echo
      exit 0
      ;;
   *)
      if [ -z ${prog} ]; then
         prog="$1"
      fi
      ;;
   esac
   shift
done

trap "rm -f /tmp/extract_symbols.commands /tmp/extract_symbols_tmp_?" 0 1 2 3

if [ x$progx = xx ]; then
   echo "No program name was given."
   echo
   exit 1
elif [ ! -r ${USERCODE}/$prog-listing.txt ]; then
   echo "The file ${USERCODE}/${prog}-listing.txt is absent or unreadable."
   echo
   exit 1
fi

tr "\\r" "\\n " <${USERCODE}/$1-listing.txt >/tmpextract_symbols_tmp_0
a2b -l2a </tmp/extract_symbols_tmp_0 >/tmp/extract_symbols_tmp_1
cat >/tmp/extract_symbols.commands <<++++
1,\$s/^.+V#.=.([0-9]+).*$/Y#V \1/
1,\$s/^.+Y#.=.([0-9]+).*$/Y#Y \1/
1,\$s/^.+W0.=.E([0-9]+).*$/YW \1/
1,\$s/^.+Y0.=.E([0-9]+).*$/YY \1/
1,\$s/^.+Z0.=.E([0-9]+).*$/YZ \1/
1,\$s/^.+Y(.)0.=.E([0-9]+).*$/Y \1 \2/
1,\$s/^=== Start P0V-1; at address ([0-9]+)\/[0-7]+ ([0-9]+).*$//
1,\$s/^=== Start (P[0-9]+)V([^;]+); at address ([0-9]+)\/[0-7]+.*$/Y\1 #\2 @\3/
1,\$s/^[^Y].+$//
++++
sed -E -f /tmp/extract_symbols.commands </tmp/extract_symbols_tmp_1 >/tmp/extract_symbols_tmp_2
tr -s "\\n" </tmp/extract_symbols_tmp_2 >settings_symbols
ex settings_symbols <<++++
1d
w
q
++++
